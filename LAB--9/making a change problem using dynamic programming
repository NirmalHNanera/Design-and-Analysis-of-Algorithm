#include <stdio.h>
#include <limits.h>

// Function to find minimum number of coins required to make a given amount
int minCoins(int coins[], int n, int amount) {
    int dp[amount + 1];

    // Initialize the dp array with maximum integer value
    for (int i = 0; i <= amount; i++) {
        dp[i] = INT_MAX;
    }

    // Base case
    dp[0] = 0;

    // Compute minimum coins required for all amounts from 1 to amount
    for (int i = 1; i <= amount; i++) {
        for (int j = 0; j < n; j++) {
            if (coins[j] <= i && dp[i - coins[j]] != INT_MAX) {
                dp[i] = dp[i - coins[j]] + 1;
            }
        }
    }

    // Return the result
    return dp[amount];
}

int main() {
    int n;
    
    printf("Enter the number of different coins: ");
    scanf("%d", &n);
    
    int coins[n];
    
    printf("Enter the values of the coins:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &coins[i]);
    }

    int amount;
    printf("Enter the amount to make change for: ");
    scanf("%d", &amount);

    int min_coins = minCoins(coins, n, amount);

    if (min_coins == INT_MAX) {
        printf("It's not possible to make change for %d.\n", amount);
    } else {
        printf("Minimum number of coins required to make change for %d: %d\n", amount, min_coins);
    }

    return 0;
}
